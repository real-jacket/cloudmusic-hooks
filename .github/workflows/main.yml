name: CloudMusic CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: React app build
        env:
          CI: ''
        run: |
          npm install
          REACT_APP_BASE_API=${{ secrets.SERVER_API }} npm run build

      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USER }}/cloud-music
          tag_with_ref: true
          tag_with_sha: true
      # - uses: actions/checkout@v1
      # - name: Docker Login
      #   run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      # - name: Build
      #   run: docker build --build-arg SERVER_API=${{ secrets.SERVER_API }} -t cloud-music .
      # - name: Tags
      #   run: |
      #     docker tag cloud-music ${{ secrets.DOCKER_USER }}/cloud-music:${{ github.sha }}
      #     docker tag cloud-music ${{ secrets.DOCKER_USER }}/cloud-music:latest
      # - name: Push
      #   run: |
      #     docker push ${{ secrets.DOCKER_USER }}/cloud-music:${{ github.sha }}
      #     docker push ${{ secrets.DOCKER_USER }}/cloud-music:latest

  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - uses: actions/checkout@v1
      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: 'scripts'
          target: '$HOME/code/'
      # - name: Copy scripts to ssh
      #   run: |
      #     ls
      #     scp -i ${{ secrets.SERVER_SSH_KEY }} -r scripts  ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}::${{secrets.EMOTE_TARGET}}
      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd $HOME/code/scripts
            ./start.sh
